{"version":3,"sources":["js/chessPiecesIcons.js","js/utils/isMobile.js","components/ChessCell.js","components/ChessRow.js","js/chessRules.js","js/websocket.js","components/ChessBoard.js","components/Chess.js","components/GameRoomMaker.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["chessPiecesIcons","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","ChessCell","chessCell","rowIndex","columnIndex","selectAndMoveChessCell","backgroundClassName","chessPiece","selected","selectedClassName","className","onClick","event","preventDefault","onTouchStart","ChessRow","chessRow","renderChessRow","map","key","console","log","chessRules","movement","firstMovement","killMovement","websocket","WebSocket","sendObject","object","send","JSON","stringify","addEventListener","data","wasClean","code","reason","error","message","from","to","singleVariable","a","b","x","y","tempX","tempY","result","i","replace","toString","tempResult","split","directionX","distanceX","directionY","distanceY","resultX","resultY","parseInt","noVariable","filter","aResult","push","cleanSelectedChessBoard","chessBoard","getSelectedChessPiecePosition","returnValue","findIndex","selectedIndex","selectAndMove","row","column","setChessBoard","turn","setTurn","gameID","type","newChessBoard","selectedRow","selectedColumn","isAlreadySelectedCell","hasSelectedCell","isEmptyChessCell","move","game","currentMovements","forEach","aMovement","availableMatchers","canHit","aKillRule","availableKillMatchers","movementArray","ChessBoard","team","gameOver","useEffect","moveChessCell","parse","removeEventListener","length","shift","renderChessRows","index","Chess","defaultChessBoard","defaultTurn","setGameOver","setWinner","useState","whiteFound","blackFound","GameRoomMaker","createRoom","joinRoom","setGameID","setTeam","value","onChange","target","Game","setGame","user","setUser","setDefaultChessBoard","setDefaultTurn","winner","connection","roomID","game_id","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2ab5574b.chunk.js","sourcesContent":["const chessPiecesIcons = {\n    \"w-king\": \"\\u2654\",\n    \"w-queen\": \"\\u2655\",\n    \"w-rook\": \"\\u2656\",\n    \"w-bishop\": \"\\u2657\",\n    \"w-knight\": \"\\u2658\",\n    \"w-pawn\": \"\\u2659\",\n    \"b-king\": \"\\u265A\",\n    \"b-queen\": \"\\u265B\",\n    \"b-rook\": \"\\u265C\",\n    \"b-bishop\": \"\\u265D\",\n    \"b-knight\": \"\\u265E\",\n    \"b-pawn\": \"\\u265F\",\n    \"\": \"\",\n};\n\nexport default chessPiecesIcons;","const isMobile = {\n    Android: function() {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function() {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function() {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function() {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function() {\n        return navigator.userAgent.match(/IEMobile/i);\n    },\n    any: function() {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n};\n\nexport default isMobile;","import React from \"react\";\nimport chessPiecesIcons from \"../js/chessPiecesIcons\";\nimport isMobile from \"../js/utils/isMobile\";\n\nconsole.log(\"isMobile: \", isMobile.any());\n\nexport default function ChessCell({chessCell, rowIndex, columnIndex, selectAndMoveChessCell}) {\n    const backgroundClassName = (rowIndex + columnIndex) % 2 ? \"chess-cell-light_background\" : \"chess-cell-dark_background\";\n    const [chessPiece, selected] = chessCell;\n    let selectedClassName = selected === \"s\" ? \"chess-cell-selected\" : \"\";\n    selectedClassName = selected === \"m\" ? \"chess-cell-move-selected\" : selectedClassName;\n    selectedClassName = selected === \"h\" ? \"chess-cell-hit-selected\" : selectedClassName;\n    const className = `chess-cell ${backgroundClassName} ${selectedClassName}`;\n\n    return (\n        <div\n            className={className}\n            onClick={(event) => {\n                event.preventDefault();\n                if (isMobile.any() === null) {\n                    selectAndMoveChessCell(rowIndex, columnIndex);\n                }\n            }}\n            onTouchStart={(event) => {\n                event.preventDefault();\n                if (isMobile.any()) {\n                    selectAndMoveChessCell(rowIndex, columnIndex);\n                }\n            }}\n        >\n            {chessPiecesIcons[chessPiece]}\n        </div>\n    );\n}","import React from \"react\";\nimport ChessCell from \"./ChessCell\";\n\nexport default function ChessRow({chessRow, rowIndex, selectAndMoveChessCell}) {\n    const renderChessRow = chessRow.map((chessCell, columnIndex) =>\n        <ChessCell\n            key={columnIndex}\n            chessCell={chessCell}\n            rowIndex={rowIndex}\n            columnIndex={columnIndex}\n            selectAndMoveChessCell={selectAndMoveChessCell}\n        />\n    );\n\n    return (\n        <div className=\"chess-row\">\n            {renderChessRow}\n        </div>\n    )\n}","const chessRules = {\n    \"w-king\": {\n        movement: [[\"+1\", \"+1\"], [\"-1\", \"-1\"], [\"+1\", \"-1\"], [\"-1\", \"+1\"], [\"+1\", \"+0\"], [\"-1\", \"+0\"], [\"+0\", \"+1\"], [\"+0\", \"-1\"]],\n        firstMovement: [],\n        killMovement: \"same\",\n    },\n    \"w-queen\": {\n        movement: [[\"+x\", \"+x\"], [\"-x\", \"-x\"], [\"+x\", \"-x\"], [\"-x\", \"+x\"], [\"+x\", \"+0\"], [\"-x\", \"+0\"], [\"+0\", \"+x\"], [\"+0\", \"-x\"]],\n        firstMovement: [],\n        killMovement: \"same\",\n    },\n    \"w-rook\": {\n        movement: [[\"+x\", \"+0\"], [\"-x\", \"+0\"], [\"+0\", \"+x\"], [\"+0\", \"-x\"]],\n        firstMovement: [],\n        killMovement: \"same\",\n    },\n    \"w-bishop\": {\n        movement: [[\"+x\", \"+x\"], [\"-x\", \"-x\"], [\"+x\", \"-x\"], [\"-x\", \"+x\"]],\n        firstMovement: [],\n        killMovement: \"same\",\n    },\n    \"w-knight\": {\n        movement: [[\"+2\", \"+1\"], [\"+2\", \"-1\"], [\"-2\", \"+1\"], [\"-2\", \"-1\"], [\"+1\", \"+2\"], [\"+1\", \"-2\"], [\"-1\", \"+2\"], [\"-1\", \"-2\"]],\n        firstMovement: [],\n        killMovement: \"same\",\n    },\n    \"w-pawn\": {\n        movement: [[\"-1\", \"+0\"]],\n        firstMovement: [[\"-2\", \"+0\"]],\n        killMovement: [[\"-1\", \"+1\"], [\"-1\", \"-1\"]],\n    },\n    \"b-king\": {\n        movement: [[\"+1\", \"+1\"], [\"-1\", \"-1\"], [\"+1\", \"-1\"], [\"-1\", \"+1\"], [\"+1\", \"+0\"], [\"-1\", \"+0\"], [\"+0\", \"+1\"], [\"+0\", \"-1\"]],\n        firstMovement: [],\n        killMovement: \"same\",\n    },\n    \"b-queen\": {\n        movement: [[\"+x\", \"+x\"], [\"-x\", \"-x\"], [\"+x\", \"-x\"], [\"-x\", \"+x\"], [\"+x\", \"+0\"], [\"-x\", \"+0\"], [\"+0\", \"+x\"], [\"+0\", \"-x\"]],\n        firstMovement: [],\n        killMovement: \"same\",\n    },\n    \"b-rook\": {\n        movement: [[\"+x\", \"+0\"], [\"-x\", \"+0\"], [\"+0\", \"+x\"], [\"+0\", \"-x\"]],\n        firstMovement: [],\n        killMovement: \"same\",\n    },\n    \"b-bishop\": {\n        movement: [[\"+x\", \"+x\"], [\"-x\", \"-x\"], [\"+x\", \"-x\"], [\"-x\", \"+x\"]],\n        firstMovement: [],\n        killMovement: \"same\",\n    },\n    \"b-knight\": {\n        movement: [[\"+2\", \"+1\"], [\"+2\", \"-1\"], [\"-2\", \"+1\"], [\"-2\", \"-1\"], [\"+1\", \"+2\"], [\"+1\", \"-2\"], [\"-1\", \"+2\"], [\"-1\", \"-2\"]],\n        firstMovement: [],\n        killMovement: \"same\",\n    },\n    \"b-pawn\": {\n        movement: [[\"+1\", \"+0\"]],\n        firstMovement: [[\"+2\", \"+0\"]],\n        killMovement: [[\"+1\", \"+1\"], [\"+1\", \"-1\"]],\n    },\n    \"\": {\n        movement: [],\n        firstMovement: [],\n        killMovement: [],\n    },\n};\n\nexport default chessRules;","let websocket = new WebSocket(\"wss://online-chess-server.herokuapp.com/\");\n\nwebsocket.sendObject = (object) => {\n    websocket.send(JSON.stringify(object));\n};\n\nwebsocket.addEventListener(\"open\", (event) => {\n    console.log(\"[open] Connection established\");\n});\n\nwebsocket.addEventListener(\"message\", (event) => {\n    console.log(`[message] Data received from server: ${event.data}`);\n});\n\nwebsocket.addEventListener(\"close\", (event) => {\n    if (event.wasClean) {\n        console.log(`[close] Connection closed cleanly, code=${event.code} reason=${event.reason}`);\n    } else {\n        // e.g. server process killed or network down\n        // event.code is usually 1006 in this case\n        console.log('[close] Connection died');\n    }\n});\n\nwebsocket.addEventListener(\"error\", function (error) {\n    console.log(`[error] ${error.message}`);\n    websocket = new WebSocket(\"ws://localhost:1337\");\n});\n\n\nexport default websocket;","import React, { useEffect } from \"react\";\nimport ChessRow from \"./ChessRow\";\nimport chessRules from \"../js/chessRules\";\nimport websocket from \"../js/websocket\";\n\nconst data = {\n    from: null,\n    to: null,\n};\n\nfunction noVariable([a, b], [x, y]) {\n    const [directionX, distanceX] = x.split(\"\");\n    const [directionY, distanceY] = y.split(\"\");\n    let [resultX, resultY] = [a, b];\n\n    if (directionX === \"+\") {\n        resultX = a + parseInt(distanceX);\n    } else {\n        resultX = a - parseInt(distanceX);\n    }\n    if (directionY === \"+\") {\n        resultY = b + parseInt(distanceY);\n    } else {\n        resultY = b - parseInt(distanceY);\n    }\n\n    if ((resultX > 7 || resultY > 7) || (resultX < 0 || resultY < 0)) {\n        return null;\n    }\n    return [resultX, resultY];\n}\n\nfunction singleVariable([a, b], [x, y]) {\n    let [tempX, tempY] = [x, y];\n\n    let result = [];\n    for (let i = 0; i < 8; i++) {\n        tempX = tempX.replace(\"x\", i.toString());\n        tempY = tempY.replace(\"x\", i.toString());\n        let tempResult = noVariable([a, b], [tempX, tempY]);\n        if (tempResult === null) {\n            break;\n        }\n        result = result.filter(aResult =>\n            !(aResult[0] === tempResult[0] && aResult[1] === tempResult[1])\n        );\n        result.push(tempResult);\n        [tempX, tempY] = [x, y];\n    }\n    return result;\n}\n\nconst cleanSelectedChessBoard = (chessBoard) => chessBoard.map(chessRow => {\n    return chessRow.map(chessCell => {\n        return [chessCell[0], \"\", chessCell[2]];\n    });\n});\n\nconst getSelectedChessPiecePosition = (chessBoard) => {\n    const returnValue = [-1, -1];\n    returnValue[0] = chessBoard.findIndex((chessRow) => {\n        const selectedIndex = chessRow.findIndex(chessCell => chessCell[1] === \"s\");\n\n        if (selectedIndex !== -1) {\n            returnValue[1] = selectedIndex;\n            return true;\n        }\n        return false;\n    });\n    return returnValue;\n};\n\nconst selectAndMove = (row, column, chessBoard, setChessBoard, turn, setTurn, gameID, type = null) => {\n    const newChessBoard = cleanSelectedChessBoard(chessBoard);\n    const [selectedRow, selectedColumn] = getSelectedChessPiecePosition(chessBoard);\n\n\n    const isAlreadySelectedCell = (row === selectedRow && column === selectedColumn);\n    const hasSelectedCell = (selectedColumn !== -1 && selectedRow !== -1);\n    const isEmptyChessCell = newChessBoard[row][column][0].match(/^\\s*$/);\n\n\n    if (isAlreadySelectedCell) {\n        console.log(\"chess cell deselected\");\n    } else if (hasSelectedCell) {\n        if (chessBoard[row][column][1] === \"h\" || chessBoard[row][column][1] === \"m\") {\n            console.log(\"move the selected chess piece if it can\");\n\n            data.to = {\n                row,\n                column,\n            };\n            if (type === null) {\n                console.log(\"Happened\");\n                websocket.sendObject({\n                    type: \"chess_move\",\n                    move: data,\n                    game: gameID,\n                });\n            }\n            newChessBoard[row][column][0] = newChessBoard[selectedRow][selectedColumn][0];\n            newChessBoard[selectedRow][selectedColumn][0] = \"\";\n\n            if (chessBoard[selectedRow][selectedColumn][2] === true) {\n                newChessBoard[selectedRow][selectedColumn][2] = false;\n            }\n\n            if (turn === \"w\") {\n                setTurn(\"b\");\n            } else {\n                setTurn(\"w\");\n            }\n        }\n\n    } else if (isEmptyChessCell) {\n        console.log(\"empty chess cell non selectable\");\n    } else {\n        console.log(\"non empty chess cell selected\");\n        if (turn === newChessBoard[row][column][0].split(\"-\")[0]) {\n            newChessBoard[row][column][1] = \"s\";\n\n            data.from = {\n                row,\n                column,\n            };\n\n            let { movement, firstMovement, killMovement } = chessRules[newChessBoard[row][column][0]];\n            console.log(row, column);\n            let currentMovements = [...movement];\n            if (newChessBoard[row][column][2]) {\n                currentMovements.push(...firstMovement);\n            }\n\n            currentMovements.forEach(aMovement => {\n                const availableMatchers = singleVariable([row, column], aMovement);\n\n                let canHit = false;\n                availableMatchers.forEach(([x, y]) => {\n                    if (newChessBoard[x][y][1] === \"s\") return;\n                    if (newChessBoard[x][y][0] !== \"\" && !canHit) {\n                        if (newChessBoard[x][y][0].split(\"-\")[0] !== newChessBoard[row][column][0].split(\"-\")[0]) {\n                            if (killMovement === \"same\")\n                                newChessBoard[x][y][1] = \"h\";\n                        }\n                        canHit = true;\n                        return;\n                    }\n                    if (!canHit) {\n                        newChessBoard[x][y][1] = \"m\";\n                    }\n                });\n            });\n\n            if (killMovement !== \"same\") {\n                killMovement.forEach(aKillRule => {\n                    const availableKillMatchers = singleVariable([row, column], aKillRule);\n\n                    let canHit = false;\n                    availableKillMatchers.forEach(([x, y]) => {\n                        if (newChessBoard[x][y][1] === \"s\") return;\n                        if (newChessBoard[x][y][0] !== \"\" && !canHit) {\n                            if (newChessBoard[x][y][0].split(\"-\")[0] !== newChessBoard[row][column][0].split(\"-\")[0]) {\n                                newChessBoard[x][y][1] = \"h\";\n                            }\n                            canHit = true;\n                        }\n                    });\n                })\n            }\n        }\n    }\n    setChessBoard(newChessBoard);\n};\nconst movementArray = [];\nexport default function ChessBoard({ chessBoard, setChessBoard, turn, setTurn, gameID, team, gameOver }) {\n\n    const selectAndMoveChessCell = (row, column, type = null) => {\n        if (!gameOver) {\n            if (type !== null) {\n                selectAndMove(row, column, chessBoard, setChessBoard, turn, setTurn, gameID, type);\n            } else if (team === turn) {\n                selectAndMove(row, column, chessBoard, setChessBoard, turn, setTurn, gameID, type);\n            }\n        }\n    };\n\n    useEffect(() => {\n        function moveChessCell(event) {\n            let { data } = event;\n            data = JSON.parse(data);\n            console.log(data);\n            if (data.type === \"chess_move\") {\n                const { move } = data;\n                selectAndMoveChessCell(move.from.row, move.from.column, \"from_server\");\n                movementArray.push([move.to.row, move.to.column]);\n            }\n        }\n\n        websocket.addEventListener(\"message\", moveChessCell);\n\n        return () => {\n            websocket.removeEventListener(\"message\", moveChessCell);\n        };\n    });\n\n    useEffect(() => {\n        if (movementArray.length > 0) {\n            const [row, column] = movementArray.shift();\n            selectAndMoveChessCell(row, column, \"from_server\");\n        }\n    }, [chessBoard]);\n\n    const renderChessRows = chessBoard.map((chessRow, index) =>\n        <ChessRow key={index} chessRow={chessRow} rowIndex={index} selectAndMoveChessCell={selectAndMoveChessCell} />\n    );\n\n    return (\n        <div className=\"chess-board\">\n            {renderChessRows}\n        </div>\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport '../Assets/css/chess.css';\nimport ChessBoard from \"./ChessBoard\";\n// import defaultChessBoard from \"../js/chessBoard\";\n\nexport default function Chess({ gameID, defaultChessBoard, defaultTurn, team, gameOver, setGameOver, setWinner }) {\n    const [chessBoard, setChessBoard] = useState(defaultChessBoard);\n    const [turn, setTurn] = useState(defaultTurn);\n\n    console.log(chessBoard);\n    useEffect(() => {\n        let whiteFound = false;\n        let blackFound = false;\n        chessBoard.forEach(chessRow => {\n            chessRow.forEach(chessCell => {\n                if (chessCell[0] === \"b-king\") {\n                    blackFound = true;\n                }\n                else if (chessCell[0] === \"w-king\") {\n                    whiteFound = true;\n                }\n            })\n        })\n        if (whiteFound && blackFound) {\n\n        } else if (whiteFound) {\n            setGameOver(true);\n            setWinner(\"w\");\n        } else if (blackFound) {\n            setGameOver(true);\n            setWinner(\"b\");\n        }\n    }, [chessBoard]);\n\n    const resetChessBoard = () => {\n        setChessBoard(defaultChessBoard);\n        setTurn(\"w\");\n    };\n\n    return (\n        <div className=\"chess\">\n            <ChessBoard\n                turn={turn}\n                setTurn={setTurn}\n                chessBoard={chessBoard}\n                setChessBoard={setChessBoard}\n                gameID={gameID}\n                team={team}\n                gameOver={gameOver}\n            />\n            <div className=\"dead-pieces\">\n\n            </div>\n            <div className=\"chess-turn\">\n                {turn === \"w\" ? \"white \" : \"black \"}\n                {turn === team && \"Your Turn\"}\n                {gameOver && \"Game Over\"}\n            </div>\n            <div className=\"reset-chess\">\n                <button onClick={() => resetChessBoard()}>\n                    Reset\n                </button>\n            </div>\n        </div>\n    );\n}","import React, {useState} from \"react\";\n\n\nexport default function GameRoomMaker({createRoom, joinRoom}) {\n    const [gameID, setGameID] = useState(\"\");\n    const [team, setTeam] = useState(\"w\");\n\n    const createGame = () => {\n        createRoom(team);\n    };\n\n    const joinGame = () => {\n        joinRoom(parseInt(gameID), team);\n    };\n\n    return (\n        <div>\n\n            <button onClick={createGame}>\n                Create Room\n            </button>\n\n\n            <input type=\"text\" value={gameID} onChange={({target: {value}}) => setGameID(value)}/>\n\n            <button onClick={joinGame}>\n                Join Room\n            </button>\n\n\n            <div>Team:</div>\n            <div>\n                <select onChange={({target: {value}}) => setTeam(value)} value={team}>\n                    <option value=\"w\">\n                        White\n                    </option>\n                    <option value=\"b\">\n                        Black\n                    </option>\n                </select>\n            </div>\n        </div>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport Chess from \"./Chess\";\nimport websocket from \"../js/websocket\";\nimport GameRoomMaker from \"./GameRoomMaker\";\n\n\nexport default function Game() {\n    const [game, setGame] = useState(null);\n    const [user, setUser] = useState(null);\n    const [defaultChessBoard, setDefaultChessBoard] = useState(null);\n    const [defaultTurn, setDefaultTurn] = useState(null);\n    const [team, setTeam] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n    const [winner, setWinner] = useState(null);\n\n\n    console.log(defaultChessBoard, defaultTurn);\n\n    useEffect(() => {\n        if (user === null) {\n            websocket.addEventListener(\"open\", () => {\n                websocket.sendObject({\n                    type: \"connection\"\n                });\n            });\n        }\n    }, [user]);\n\n    useEffect(() => {\n        function connection(event) {\n            let {data} = event;\n            data = JSON.parse(data);\n            console.log(data);\n\n            if (data.type === \"connection\") {\n                setUser(data[\"id\"]);\n            } else if (data.type === \"game_room\") {\n                setGame(data[\"id\"]);\n                setDefaultChessBoard(data[\"board\"]);\n                setDefaultTurn(data[\"turn\"]);\n                setTeam(data[\"team\"]);\n                console.log(data[\"team\"]);\n            }\n        }\n\n        if (game === null) {\n            websocket.addEventListener(\"message\", connection);\n        }\n\n        return () => {\n            websocket.removeEventListener(\"message\", connection);\n        };\n    }, [game]);\n\n    const createRoom = (team) => {\n        if (user !== null) {\n            websocket.sendObject({\n                type: \"create_room\",\n                team,\n            });\n        }\n    };\n\n    const joinRoom = (roomID, team) => {\n        if (user !== null) {\n            websocket.sendObject({\n                type: \"join_room\",\n                game_id: roomID,\n                team,\n            });\n        }\n    };\n\n    return (\n        <div className={`rows game ${gameOver ? \"game-end\" : \"\"}`}>\n            <div className=\"row no-flex test test-blue status\">\n                {\n                    gameOver && (\n                        winner === 'w' ? \"white is winner\" : \"black is winner\"\n                    )\n                }\n            </div>\n            <div className=\"row no-flex test test-blue status\">\n                {\n                    user !== null &&\n                    `current user id: ${user}`\n                }\n            </div>\n            <div className=\"row no-flex test test-blue\">\n                {\n                    (game !== null && defaultTurn !== null && defaultChessBoard !== null && team !== null) &&\n                    <>\n                        {`GameID: ${game}`}\n                        <Chess gameID={game} defaultTurn={defaultTurn} defaultChessBoard={defaultChessBoard}\n                               team={team} gameOver={gameOver} setGameOver={setGameOver}\n                               winner={winner} setWinner={setWinner}/>\n                    </>\n                }\n            </div>\n            <div className=\"row no-flex column-center test test-blue\">\n                {\n                    game === null && (\n                        <GameRoomMaker createRoom={createRoom} joinRoom={joinRoom}/>\n                    )\n                }\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport Game from \"./components/Game\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Game/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}